<!-- 消息卡片组件 -->
<view 
  id="message-{{ messageIndex }}"
  class="p-6 space-y-4 {{ isLoading ? 'text-gray-800' : message.role === 'user' ? 'bg-white text-gray-800 rounded-lg overflow-hidden shadow-md' : message.role === 'tool' ? 'text-gray-800 rounded-lg overflow-hidden' : 'text-gray-800' }}"
>
  <!-- 卡片头部 -->
  <view class="flex items-center justify-between">
    <text class="card-title text-xs font-medium text-gray-600">{{ isLoading ? 'AI助手' : message.role === 'user' ? '用户' : message.role === 'tool' ? '工具' : 'AI助手' }}</text>
  </view>
  
  <!-- 工具调用信息 - 循环渲染当前调用的工具 -->
  <view wx:if="{{ message.tool_calls && message.tool_calls.length > 0 }}">
    <view class="mb-2">
      <text class="text-sm font-medium text-blue-600">正在调用工具: </text>
    </view>
    <view wx:for="{{ message.tool_calls }}" wx:key="id" wx:for-item="toolCall" class="flex flex-col my-4 rounded border p-3">
      <view class="font-medium text-blue-700">{{toolCall.function.name}}</view>
      <view class="break-all leading-140 mt-1">
        <text class="text-xs text-gray-500">{{ toolCall.function.arguments }}</text>
      </view>
    </view>
  </view>
  
  <!-- 卡片内容 -->
  <view>
    <!-- 加载状态 -->
    <view wx:if="{{ isLoading }}" class="flex gap-2 items-center loading-dots">
      <view class="w-3 h-3 rounded-full bg-gray-400 loading-dot"></view>
      <view class="w-3 h-3 rounded-full bg-gray-400 loading-dot"></view>
      <view class="w-3 h-3 rounded-full bg-gray-400 loading-dot"></view>
    </view>
    <!-- 正常消息内容 -->
    <block wx:else>
      <!-- 消息内容 -->
      <block wx:if="{{ message.content || message.towxmlNodes }}">
        <!-- 检查是否为组件内容 -->
        <block wx:if="{{ message.content && message.content.type === 'weather' }}">
          <!-- 天气组件内容 -->
          <view class="weather-component-wrapper">
            <!-- 使用微信小程序的view组件渲染天气信息 -->
            <view class="bg-gradient-to-br from-blue-50 to-indigo-100 p-4 rounded-lg">
              <view class="flex items-center justify-between mb-4">
                <text class="text-lg font-semibold text-gray-800">{{ message.content.miniProgramData.city }} 天气</text>
                <text class="text-sm text-gray-500">{{ message.content.miniProgramData.updateTime }}</text>
              </view>
              
              <view class="grid grid-cols-2 gap-4 mb-4">
                <view class="text-center">
                  <text class="text-3xl font-bold text-blue-600">{{ message.content.miniProgramData.temperature.current }}°C</text>
                  <view class="text-sm text-gray-600">当前温度</view>
                </view>
                <view class="text-center">
                  <text class="text-lg font-medium text-gray-800">{{ message.content.miniProgramData.weather }}</text>
                  <view class="text-sm text-gray-600">天气状况</view>
                </view>
              </view>
              
              <view class="grid grid-cols-3 gap-2 mb-4 text-sm">
                <view class="text-center">
                  <text class="font-medium text-gray-700">{{ message.content.miniProgramData.temperature.high }}°C</text>
                  <view class="text-gray-500">最高</view>
                </view>
                <view class="text-center">
                  <text class="font-medium text-gray-700">{{ message.content.miniProgramData.temperature.low }}°C</text>
                  <view class="text-gray-500">最低</view>
                </view>
                <view class="text-center">
                  <text class="font-medium text-gray-700">{{ message.content.miniProgramData.humidity }}%</text>
                  <view class="text-gray-500">湿度</view>
                </view>
              </view>
              
              <view class="flex space-x-2">
                <button 
                  class="flex-1 bg-blue-500 text-white rounded px-3 py-2 text-sm" 
                  data-component-id="{{ message.content.componentId }}"
                  bindtap="onWeatherRefresh"
                >
                  🔄 刷新
                </button>
                <button 
                  class="flex-1 bg-green-500 text-white rounded px-3 py-2 text-sm" 
                  data-component-id="{{ message.content.componentId }}"
                  bindtap="onWeatherShare"
                >
                  📤 分享
                </button>
                <button 
                  class="flex-1 bg-purple-500 text-white rounded px-3 py-2 text-sm" 
                  data-component-id="{{ message.content.componentId }}"
                  bindtap="onWeatherDetail"
                >
                  📊 详情
                </button>
              </view>
            </view>
          </view>
        </block>
        <!-- 使用 towxml 渲染 Markdown 内容 -->
        <towxml wx:elif="{{ message.towxmlNodes }}" nodes="{{ message.towxmlNodes }}" />
        <!-- 如果没有 towxml 节点，显示原始文本 -->
        <text wx:else class="text-sm leading-relaxed whitespace-pre-wrap break-words">{{ message.content }}</text>
        <!-- 流式输入光标 -->
        <view wx:if="{{ message.role === 'assistant' && isStreaming && isLast && message.content }}" class="streaming-cursor">
          <text class="text-blue-500">|</text>
        </view>
      </block>
    </block>
  </view>
</view>
