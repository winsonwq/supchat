<!-- 消息卡片组件 -->
<view 
  wx:if="{{ message.role === 'user' }}"
  class="user-message"
>
  <view 
    id="message-{{ messageIndex }}"
    class="p-6 space-y-4 bg-gray-100 text-gray-800 rounded-lg overflow-hidden"
  >
    <view class="flex items-center justify-between">
      <text class="card-title text-xs font-medium text-gray-600">用户</text>
    </view>
    
    <!-- 工具调用信息 - 循环渲染当前调用的工具 -->
    <view wx:if="{{ message.tool_calls && message.tool_calls.length > 0 }}">
      <view class="mb-3 flex items-center space-x-2">
        <text class="text-sm font-medium text-blue-600">正在调用工具</text>
      </view>
      <view wx:for="{{ message.tool_calls }}" wx:key="id" wx:for-item="toolCall" class="tool-call-item my-2">
        <view class="flex items-center justify-between bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl p-4 border border-blue-200 hover:border-blue-300 hover:shadow-md transition-all duration-300">
          <text class="font-semibold text-blue-800 text-sm">{{ toolCall.function.name }}</text>
          <view class="cursor-pointer p-2 rounded-full hover:bg-blue-100 transition-colors duration-200" bindtap="showToolParamsModal" data-tool-index="{{ index }}">
            <svg-icon name="info" class="w-4 h-4 text-blue-600 hover:text-blue-800" />
          </view>
        </view>
      </view>
    </view>
    
    <!-- 卡片内容 -->
    <view>
      <!-- 消息内容 -->
      <block wx:if="{{ message.content || message.towxmlNodes }}">
        <!-- 使用 towxml 渲染 Markdown 内容 -->
        <towxml wx:if="{{ message.towxmlNodes }}" nodes="{{ message.towxmlNodes }}" />
        <!-- 如果没有 towxml 节点，显示原始文本 -->
        <text wx:else class="text-sm leading-relaxed whitespace-pre-wrap break-words">{{ message.content }}</text>
      </block>
    </view>
  </view>
</view>

<!-- 非用户消息的普通渲染 -->
<view 
  wx:else
  id="message-{{ messageIndex }}"
  class="p-6 space-y-4 {{ isLoading ? 'text-gray-800' : message.role === 'tool' ? 'text-gray-800 rounded-lg overflow-hidden' : 'text-gray-800' }}"
>
   <view class="flex flex-col">
    <!-- 卡片头部 -->
    <view class="flex items-center justify-between">
      <view wx:if="{{ message.aiconfig }}" class="flex flex-col space-y-1">
        <!-- Agent 名称 - 如果存在则显示 -->
        <text wx:if="{{ message.agent && message.agent.name }}" class="text-xs font-medium text-blue-600">{{ message.agent.name }}</text>
        <!-- AI 配置信息 -->
        <view class="flex items-center space-x-1 text-sm font-medium">
          <text>{{ message.aiconfig.name }}</text>
          <text>({{ message.aiconfig.model }})</text>
        </view>
      </view>
      <text wx:else class="card-title text-sm font-medium text-gray-600">{{ isLoading ? 'AI助手' : message.role === 'tool' ? '工具' : 'AI助手' }}</text>
    </view>
    <!-- 时间显示 -->
    <view class="flex items-center">
      <formatter type="datetime" value="{{ message.createdAt }}" format="YYYY-MM-DD HH:mm" className="text-xs text-gray-500" />
    </view>
  </view>
  
  <!-- 工具确认UI - 当消息携带工具确认数据时显示 -->
  <view wx:if="{{ message.toolConfirmData }}" >
    <view class="mb-3 flex items-center space-x-2">
      <text class="text-sm font-medium text-blue-600">正在调用工具</text>
    </view>
    <view class="tool-confirm-container">
      <!-- 工具信息 -->
      <view class="tool-info">
        <view class="tool-header">
          <svg-icon name="tool" size="32" class="tool-icon" />
          <text class="tool-name">{{ message.toolConfirmData.toolName }}</text>
        </view>
        <text class="tool-message">需要确认执行以下操作</text>
      </view>

      <!-- 参数展示 -->
      <view wx:if="{{ formattedArguments }}" class="tool-arguments">
        <text class="arguments-label">参数：</text>
        <view class="arguments-content">
          <text class="arguments-text">{{ formattedArguments }}</text>
        </view>
      </view>

      <!-- 操作按钮 -->
      <view class="tool-actions">
        <button 
          class="btn btn-secondary btn-small" 
          bindtap="onToolCancel"
          data-confirm-id="{{ message.toolConfirmData.confirmId }}"
        >
          取消
        </button>
        <button 
          class="btn btn-primary btn-small" 
          bindtap="onToolConfirm"
          data-confirm-id="{{ message.toolConfirmData.confirmId }}"
        >
          确认
        </button>
      </view>
    </view>
  </view>
  
  <!-- 工具调用信息 - 只在没有工具确认时显示，避免界面混乱 -->
  <view wx:elif="{{ message.tool_calls && message.tool_calls.length > 0 }}">
    <view class="mb-3 flex items-center space-x-2">
      <text class="text-sm font-medium text-blue-600">调用工具</text>
    </view>
    <view wx:for="{{ message.tool_calls }}" wx:key="id" wx:for-item="toolCall" class="tool-call-item my-2">
      <view class="cursor-pointer flex items-center justify-between bg-gray-100 rounded-lg p-4" bindtap="showToolParamsModal" data-tool-index="{{ index }}">
        <text class="font-medium text-gray-800 text-sm">{{ toolCall.function.name }}</text>
        <svg-icon name="expand" size="36" />
      </view>
    </view>
  </view>
  
  <!-- 卡片内容 -->
  <view>
    <!-- 加载状态 -->
    <view wx:if="{{ isLoading }}" class="flex gap-2 items-center loading-dots">
      <view class="w-3 h-3 rounded-full bg-gray-400 loading-dot"></view>
      <view class="w-3 h-3 rounded-full bg-gray-400 loading-dot"></view>
      <view class="w-3 h-3 rounded-full bg-gray-400 loading-dot"></view>
    </view>
    <!-- 正常消息内容 -->
    <block wx:else>
      <!-- 消息内容显示 - 如果有工具确认数据则不显示内容，避免重复 -->
      <block wx:if="{{ !message.toolConfirmData && (message.content || message.towxmlNodes) }}">
        <!-- 使用 towxml 渲染 Markdown 内容 -->
        <towxml wx:if="{{ message.towxmlNodes }}" nodes="{{ message.towxmlNodes }}" />
        <!-- 如果没有 towxml 节点，显示原始文本 -->
        <text wx:else class="text-sm leading-relaxed whitespace-pre-wrap break-words">{{ message.content }}</text>
        <!-- 流式输入光标 -->
        <view wx:if="{{ message.role === 'assistant' && isStreaming && isLast && message.content }}" class="streaming-cursor">
          <text class="text-blue-500">|</text>
        </view>
      </block>
    </block>
  </view>
</view>

<!-- 使用 generic-dialog 组件显示工具参数弹窗 -->
<generic-dialog 
  visible="{{ showToolParamsModal }}" 
  title="工具参数" 
  width="600rpx"
  bind:close="closeToolParamsModal"
>
  <view class="p-4">
    <view class="mb-4">
      <text class="text-sm font-medium text-gray-700 mb-2 block">工具名称</text>
      <text class="text-sm text-gray-800 bg-gray-50 p-3 rounded border">{{ selectedToolCall.function.name }}</text>
    </view>
    
    <view class="mb-4">
      <text class="text-sm font-medium text-gray-700 mb-2 block">参数</text>
      <view class="tool-params-code">
        <text class="font-mono">{{ toolParamsFormatted }}</text>
      </view>
    </view>
  </view>
</generic-dialog>
