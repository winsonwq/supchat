<!-- 消息卡片组件 -->
<view 
  id="message-{{ messageIndex }}"
  class="p-6 {{ isLoading ? 'text-gray-800' : message.role === 'user' ? 'bg-white text-gray-800 rounded-lg overflow-hidden shadow-md' : message.role === 'tool' ? 'bg-blue-50 text-gray-800 rounded-lg overflow-hidden shadow-md border-l-4 border-blue-500' : 'text-gray-800' }}"
>
  <!-- 卡片头部 -->
  <view class="flex items-center justify-between">
    <text class="card-title text-xs font-medium text-gray-600">{{ isLoading ? 'AI助手' : message.role === 'user' ? '用户' : message.role === 'tool' ? '工具' : 'AI助手' }}</text>
    <!-- 流式响应指示器 -->
    <view wx:if="{{ !isLoading && message.role === 'assistant' && isStreaming && isLast && !message.content }}" class="streaming-indicator flex items-center">
      <view class="flex gap-1 items-center">
        <text class="text-xs text-gray-500 ml-2">正在思考...</text>
      </view>
    </view>
  </view>
  
  <!-- 工具调用信息 -->
  <view wx:if="{{ !isLoading && message.tool_calls && message.tool_calls.length > 0 }}" class="p-6 bg-blue-alpha-10 border-b border-blue-alpha-20">
    <view class="mb-2">
      <text class="text-sm font-medium text-blue-600">正在调用工具:</text>
    </view>
    <view wx:for="{{ message.tool_calls }}" wx:key="id" wx:for-item="toolCall" class="flex flex-col mb-2 p-3 rounded bg-white-alpha-80 border border-blue-alpha-20">
      <view class="mb-1">
        <text class="text-xs font-medium text-gray-700">{{ toolCall.function.name }}</text>
      </view>
      <view class="break-all leading-140">
        <text class="text-xs text-gray-500">参数: {{ toolCall.function.arguments }}</text>
      </view>
    </view>
  </view>
  
  <!-- 卡片内容 -->
  <view class="">
    <!-- 加载状态 -->
    <view wx:if="{{ isLoading }}" class="flex gap-2 items-center loading-dots">
      <view class="w-3 h-3 rounded-full bg-gray-400 loading-dot"></view>
      <view class="w-3 h-3 rounded-full bg-gray-400 loading-dot"></view>
      <view class="w-3 h-3 rounded-full bg-gray-400 loading-dot"></view>
    </view>
    <!-- 正常消息内容 -->
    <block wx:else>
      <!-- 使用 towxml 渲染 Markdown 内容 -->
      <towxml wx:if="{{ message.towxmlNodes }}" nodes="{{ message.towxmlNodes }}" />
      <!-- 如果没有 towxml 节点，显示原始文本 -->
      <text wx:else class="text-sm leading-relaxed whitespace-pre-wrap break-words">{{ message.content }}</text>
      <!-- 流式输入光标 -->
      <view wx:if="{{ message.role === 'assistant' && isStreaming && isLast && message.content }}" class="streaming-cursor">
        <text class="text-blue-500">|</text>
      </view>
    </block>
  </view>
</view>
